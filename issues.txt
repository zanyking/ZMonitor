

Thread Monitoring:
	[ISSUES]:
	+. managed environment: an environment which has task execution defined by the app's infra that provides filter interface to mimic the execution.
	+. Only a managed environment can guarentee definite termination of a monitored sequence.
		
	+. The relationship between a monitored task and a thread is not always 1 on 1, be cause the app might do thread pooling and invoke various tasks in one thread.
	+. Unmanaged environment can only depends on strict paired operations of push & pop to terminate a monitored sequence.

	[SOLUTIONS]:
	+. ZMonitor can provides API for manual MS termination:
		pseudo code:
		ZMonitor.start();	
		try{
			//TODO with logging...
		}finally{
			ZMonitor.finish();	
		}

	+. ZMonitor can provides a mechanism based on Java Instrumentation technology to terminate a zmonitor.

	+. When used behind a logger, ZMonitor can provides a configurable key pattern and let user be able to terminate current monitor through logging method call.
		pseudo code:
		logger.info("@zmonitor.start");// or simply: "|>>"
		try{
			logger.info("@zmonitor.push");// or simply: ">>"
			logger.info("@zmonitor.pop");// or simply: "<<"
		}finally{
			logger.info("@zmonitor.stop");// or simply: "|<<"
		}
		
